// CORPO DO CÓDIGO
<S> ::= <E><S>
<S> ::= <E>
<S> ::= <K><S>
<S> ::= <K>
<S> ::= <M><S>
<S> ::= <M>
<S> ::= <N><S>
<S> ::= <N>



// VARIÁVEIS
<A> ::= var_id              {{ addTS(A.valor_lexico, var_id.valor_lexico) }}

// INTEIROS
<B> ::= int_num             {{ addTS(B.tipo, INTEIRO) }}

// BOOLEANOS
<C> ::= bool_val            {{ addTS(C.tipo, BOOLEANO) }}

// DECLARAÇÃO
<D> ::= int                 {{ addTS(D.tipo, INTEIRO) }}
<D> ::= bool                {{ addTS(D.tipo, BOOLEANO) }}
<E> ::= <D> <A>;            {{ addTS(A.tipo, D.tipo) }}



// OPERADORES
<F> ::= +
<F> ::= -
<G> ::= *
<G> ::= /

// EXPRESSÕES
<H> ::= <A>                 {{ addTS(H.tipo, A.tipo) }}
<H> ::= <B>                 {{ addTS(H.tipo, B.tipo) }}
<H> ::= <C>                 {{ addTS(H.tipo, C.tipo) }}
<H> ::= (<I>)               {{ addTS(H.tipo, I.tipo) }}

<I> ::= <I><F><J>           {{ addTS(I.tipo, I.tipo); verifica(I.tipo, J.tipo) }}
<I> ::= <J>                 {{ addTS(I.tipo, J.tipo) }}

<J> ::= <J><G><H>           {{ addTS(J.tipo, J.tipo); verifica(J.tipo, H.tipo) }}
<J> ::= <H>                 {{ addTS(J.tipo, H.tipo) }}

// ATRIBUIÇÃO
<K> ::= <A> = <I>;          {{ verifica(A.tipo, I.tipo) }}



// CONDIÇÃO
<L> ::= <I> == <I>
<L> ::= <I> != <I>

// BLOCO CONDICIONAL
<M> ::= <M>(<L>) {<S>}

// ESTRUTURA CONDICIONAL
<M> ::= se
<M> ::= enquanto



// FUNÇÃO
<N> ::= imprime (<I>) ;
